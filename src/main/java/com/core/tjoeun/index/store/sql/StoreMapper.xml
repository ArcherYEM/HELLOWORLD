<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.core.tjoeun.index.store.sql.StoreMapper">

<select id="getBgmAll" resultType="int">
	select
	count(*)
	from bgm
</select>

<select id="getBgmList" resultType="map" parameterType="map">
	select 
		seq
	    ,title
	    ,artist
	    ,runningTime
	    ,bgmPrice
	    ,contentPath
	from bgm
	where 1 = 1
	<if test="null != content and '' != content">
		and title like concat('%',#{content},'%')
		or artist like concat('%',#{content},'%')
	</if>
	<if test="title != null and title != '' and artist != null and artist != ''">
		and title = #{title}
		and artist = #{artist}
	</if>
</select>

<insert id="putBgm" parameterType="map">
	INSERT INTO userBgm(
		userNickname
		,title
		,artist
		,runningTime
		,contentPath
		,allocation
	) values (
		#{userNickname}
		,#{title}
		,#{artist}
		,#{runningTime}
		,#{contentPath}
		,0
	)
</insert>

<select id="getStoreBgmList" resultType="map" parameterType="map">
   <![CDATA[
   SELECT 
		seq
	    ,title
	    ,artist
	    ,runningTime
	    ,bgmPrice
	    ,contentPath
	FROM bgm
	WHERE 1 = 1
	<if test="null != content and '' != content">
		AND title like concat('%',#{content},'%')
		OR artist like concat('%',#{content},'%')
	</if>
	<if test="title != null and title != '' and artist != null and artist != ''">
		AND title = #{title}
		AND artist = #{artist}
	</if>
   LIMIT #{limit, jdbcType=INTEGER} 
   OFFSET #{offset, jdbcType=INTEGER}
   ]]>
</select>

<select id="getStoreMinimiList" resultType="map" parameterType="map">
   <![CDATA[
   SELECT
       seq,
       category,
       productName,
       contentPath,
       productPrice
   FROM store
   WHERE category = 'minimi'
   AND productName != '기본 미니미'
   LIMIT #{limit, jdbcType=INTEGER} 
   OFFSET #{offset, jdbcType=INTEGER}
   ]]>
</select>

<insert id="insertDotoriC" parameterType="map">
	insert into dotoriC (
		userNickname
		,dotoriCharge
		,dotoriChargeDate
		,dotoriChargeMethod
		,dotoriPrice
	) values (
		#{userNickname}
		,#{dotoriCharge}
		,current_timestamp
		,#{dotoriMethod} 
		,#{dotoriPrice})
</insert>

<select id="selectDotori" parameterType="String" resultType="String">
	select userNickname 
	from dotori 
	where userNickname = #{userNickname};
</select>

<insert id="insertDotori" parameterType="map">
	insert into dotori (
		userNickname
		,currentDotori
	) values (
		#{userNickname}
		,#{dotoriCharge}
	)
</insert>

<update id="updateDotori" parameterType="map">
	update dotori 
	set 
	currentDotori = currentDotori + #{dotoriCharge} 
	where 
		userNickname = #{userNickname};
</update>

<update id="deductDotori" parameterType="map">
	update dotori
	set
	currentDotori = #{amount}
	where 
		userNickname = #{userNickname};
</update>

<select id="selectStoreCnt" resultType="map" parameterType="map">
	select 
		count(*) as totalCnt
	from store
	where 1=1
	<if test="category != null">
		and category = #{category}
	</if>
</select>

<select id="getMyDotori" parameterType="String" resultType="int">
	select currentDotori 
	from dotori 
	where userNickname = #{userNickname};
</select>

<insert	id="insertBuyCart" parameterType="map">
	insert into userStorage (
		userNickname
        ,category
        ,productName
        ,contentPath
        ,allocation
	) values (
		#{userNickname}
	    ,#{category}
	    ,#{productName}
	    ,#{contentPath}
	    ,0
	)
</insert>

<update id="updateBuyCartDotoriCnt" parameterType="map">
	update dotori
	set
	currentDotori = #{currentDotori}
	where 1=1
	<if test="userNickname != null">
		and userNickname = #{userNickname}
	</if>
</update>

<select id="getCartItemDuplicateCount" resultType="int" parameterType="map">
    SELECT COUNT(*) FROM userStorage
    WHERE userNickname = #{userNickname}
    AND category = #{category}
    AND productName = #{productName}
    AND contentPath = #{contentPath}
</select>

<insert id="insertDotoriUse" parameterType="map">
	insert into dotoriU (
		userNickname
		,dotoriUse
		,dotoriUseFor
		,dotoriUseDate
		) values (
		#{userNickname}
		,#{dotoriUse}
		,#{dotoriUseFor}
		,current_timestamp()
		)
</insert>
</mapper>