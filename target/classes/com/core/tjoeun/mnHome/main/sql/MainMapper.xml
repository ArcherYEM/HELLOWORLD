<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="com.core.tjoeun.mnHome.main.sql.MainMapper">

<select id="getProfile" parameterType="String" resultType="map">
	select
		image
		,msg
	from profile
	where userNickname = #{userNickname}
	order by create_date desc
	limit 1
</select>

<select id="getProfileNoImg" parameterType="String" resultType="map">
	SELECT 
	    (SELECT image FROM profile 
	     WHERE userNickname = #{userNickname} 
	     AND image != 'noneFile' 
	     ORDER BY create_date DESC LIMIT 1) AS image,
	    msg
	FROM profile
	WHERE userNickname = #{userNickname}
	ORDER BY create_date DESC
	LIMIT 1
</select>

<select id="getProfileNoMsg" parameterType="String" resultType="map">
	SELECT 
	    (SELECT image FROM profile 
	     WHERE userNickname = #{userNickname}
	     AND image != 'noneFile'
	     ORDER BY create_date DESC LIMIT 1) AS image,
	    (SELECT msg FROM profile 
	     WHERE userNickname = #{userNickname}
	     AND msg != '' 
	     ORDER BY create_date DESC LIMIT 1) AS msg
	FROM profile
	WHERE userNickname = #{userNickname}
	ORDER BY create_date DESC
	LIMIT 1
</select>

<select id="getProfileHistory" parameterType="String" resultType="map">
	select 
		image
		,msg
		,create_date
    from profile
    where userNickname = #{userNickname}
    order by create_date desc
</select>

<select id="getMinimi" parameterType="String" resultType="map">
	SELECT contentPath
	FROM userStorage
	WHERE userNickname = #{userNickname}
	AND category = "minimi"
</select>

<insert id="upsertBackground" parameterType="map">
	insert into miniroomBackground
		(userNickname
		,backgroundName
		,backgroundPath)
	values
		(#{userNickname}
		,#{backgroundName}
		,#{backgroundPath})
</insert>

<delete id="resetBackground" parameterType="String">
	delete from miniroomBackground
	where userNickname = #{userNickname}
</delete>

<delete id="resetMinimi" parameterType="String">
	delete from miniroomMinimi
	where userNickname = #{userNickname}
</delete>

<insert id="insertMinimi" parameterType="String">
	insert into miniroomMinimi
		(userNickname
		,minimiName
		,minimiPath
		,minimiLeft
		,minimiTop)
	values 
		(#{userNickname}
		,#{minimiName}
		,#{minimiPath}
		,#{minimiLeft}
		,#{minimiTop})
</insert>

<select id="selectMinimi" parameterType="String" resultType="map">
	select * from miniroomMinimi
	where userNickname = #{userNickname}	
</select>

<select id="selectBackground" parameterType="String" resultType="map">
	select * from miniroomBackground
	where userNickname = #{userNickname}	
</select>

<select id="selectHomeTitle" parameterType="String" resultType="map">
	select
		seq
		,title
	from
		miniHomeTitle
	where
	userNickname = #{userNickname}

</select>

<insert id="insertHomeTitle" parameterType="map">
	insert into miniHomeTitle
	(
		userNickname
	   ,title
	) values (
	
		#{userNickname}
	   ,#{title}
	)
</insert>

<update id="updateHomeTitle" parameterType="map">
	update miniHomeTitle
	set
		title = #{title}
	   ,update_date = CURRENT_TIMESTAMP
	where
		userNickname = #{userNickname}
</update>

<select id="selectAllTab" parameterType="String" resultType="map">
	SELECT 
	    (SELECT COUNT(*) FROM diary WHERE userNickname = #{userNickname}) AS DiaryCount,	    
	    (SELECT COUNT(*) FROM board WHERE userNickname = #{userNickname}) AS BoardCount,
	    (SELECT COUNT(*) FROM visit WHERE targetNickname = #{userNickname}) AS VisitCount
</select>

<select id="selectNewTab" parameterType="String" resultType="map">
	SELECT 
	    (SELECT COUNT(*) FROM diary 
	     WHERE userNickname = #{userNickname}
	     <![CDATA[ 
	     	AND TIMESTAMPDIFF(HOUR, update_date, NOW()) <= 24) AS DiaryCount,
	     ]]>
	
	    (SELECT COUNT(*) FROM board 
	     WHERE userNickname = #{userNickname}
	     <![CDATA[ 
	     	AND TIMESTAMPDIFF(HOUR, update_date, NOW()) <= 24) AS BoardCount,
		]]>
		
	    (SELECT COUNT(*) FROM visit 
	     WHERE targetNickname = #{userNickname}
	      <![CDATA[
	     	AND TIMESTAMPDIFF(HOUR, update_date, NOW()) <= 24) AS VisitCount
	     ]]>
</select>

<select id="getMyFriends" parameterType="String" resultType="map">
	SELECT 
	    CASE 
	        WHEN f.userNickname = #{userNickname} THEN f.friendNickname
	        WHEN f.friendNickname = #{userNickname} THEN f.userNickname
	    END AS Name,
	    u.userEmail
	FROM friends AS f
	JOIN user AS u ON (f.userNickname = #{userNickname} AND f.friendNickname = u.userNickname) 
	                OR (f.friendNickname = #{userNickname} AND f.userNickname = u.userNickname)
	WHERE (#{userNickname} = f.userNickname OR #{userNickname} = f.friendNickname) 
	AND f.fStatus = 1 AND f.del_yn = 'n';
</select>

<select id="mainSkin" parameterType="map" resultType="map">
	SELECT 
		category
		,productName
		,userNickname
	FROM
		userStorage
	WHERE 1=1
		AND userNickname = #{userNickname}
		AND allocation = '1'
		AND category = 'skin'
</select>

<select id="mainMenu" parameterType="map" resultType="map">
	SELECT 
		category
		,productName
		,userNickname
	FROM
		userStorage
	WHERE 1=1
		AND userNickname = #{userNickname}
		AND allocation = '1'
		AND category = 'menu'
</select>

<insert id="insertFriendCmt" parameterType="map">
	insert into friendCMT (
		userNickname
		,friendNickname
		,content
	) values (
		#{userNickname}
		,#{friendNickname}
		,#{content}
	)
</insert>

</mapper>