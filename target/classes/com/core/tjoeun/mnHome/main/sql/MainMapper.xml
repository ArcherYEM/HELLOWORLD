<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="com.core.tjoeun.mnHome.main.sql.MainMapper">

	<select id="getMyBgm" parameterType="String" resultType="map">
		select 
			* 
		from 
			userBgm 
		where 
			userNickname = #{userNickname} 
		and 
			allocation = 1
	</select>
	
	<select id="selectVisitCnt" parameterType="String" resultType="map">
		select
			userNickname
			,todayCnt
			,totalCnt
		from visitCnt
		where userNickname = #{userNickname}
	</select>
	
	<!-- 프로필 가져오기 -->
	<select id="getProfile" parameterType="String" resultType="map">
		select
			image
			,msg
		from profile
		where userNickname = #{userNickname}
		order by create_date desc
		limit 1
	</select>
	
	<select id="getProfileNoImg" parameterType="String" resultType="map">
		SELECT 
		    (SELECT image FROM profile 
		     WHERE userNickname = #{userNickname} 
		     AND image != 'noneFile' 
		     ORDER BY create_date DESC LIMIT 1) AS image,
		    msg
		FROM profile
		WHERE userNickname = #{userNickname}
		ORDER BY create_date DESC
		LIMIT 1
	</select>
	
	<select id="getProfileNoMsg" parameterType="String" resultType="map">
		SELECT 
		    (SELECT image 
		    	FROM profile 
		    	WHERE userNickname = #{userNickname}
		    	AND image != 'noneFile'
		    	ORDER BY create_date DESC LIMIT 1
		    ) AS image
		    ,(SELECT msg 
		    	FROM profile 
		    	WHERE userNickname = #{userNickname}
		    	AND msg != '' 
		    	ORDER BY create_date DESC LIMIT 1
		    ) AS msg
		FROM 
			profile
		WHERE 
			userNickname = #{userNickname}
		ORDER BY 
			create_date DESC
		LIMIT 1
	</select>


	<select id="selectUserInfo" parameterType="String" resultType="map">
		SELECT
		    mht.seq,
		    mht.title,
		    u.userGender,
		    u.userName
		FROM
		    user u
		JOIN
		    miniHomeTitle mht 
		ON u.userNickname = mht.userNickname
		WHERE
		    u.userNickname = #{userNickname}
	</select>

	<select id="getMyFriends" parameterType="String" resultType="map">
		SELECT 
		    CASE 
		        WHEN f.userNickname = #{userNickname} THEN f.friendNickname
		        WHEN f.friendNickname = #{userNickname} THEN f.userNickname
		    END AS Name,
		    u.userEmail
		FROM friends AS f
		JOIN user AS u ON (f.userNickname = #{userNickname} AND f.friendNickname = u.userNickname) 
		                OR (f.friendNickname = #{userNickname} AND f.userNickname = u.userNickname)
		WHERE (#{userNickname} = f.userNickname OR #{userNickname} = f.friendNickname) 
		AND f.fStatus = 1 AND f.del_yn = 'n';
	</select>
	
	<select id="friendCheck" parameterType="map" resultType="int">
		SELECT 
		    CASE 
		        WHEN EXISTS (
		            SELECT 1 
		            FROM friends 
		            WHERE 
		                (userNickname = #{userNickname} AND friendNickname = #{friendNickname} AND fStatus = 1) 
		                OR 
		                (userNickname = #{friendNickname} AND friendNickname = #{userNickname} AND fStatus = 1)
		        ) 
		        THEN 1 
		        ELSE 0 
		    END AS result
	</select>

	<select id="tabs" parameterType="String" resultType="map">
		SELECT 
		    (SELECT COUNT(*) FROM diary WHERE userNickname = #{userNickname} and del_yn="n") AS TotalDiaryCount,
		    <![CDATA[ 
		    	(SELECT COUNT(*) FROM diary WHERE userNickname = #{userNickname} and del_yn="n" AND TIMESTAMPDIFF(HOUR, update_date, NOW()) <= 24) AS RecentDiaryCount,
			]]>
		    
		    (SELECT COUNT(*) FROM board WHERE userNickname = #{userNickname} and del_yn="n") AS TotalBoardCount,
		    <![CDATA[ 
		    	(SELECT COUNT(*) FROM board WHERE userNickname = #{userNickname} and del_yn="n" AND TIMESTAMPDIFF(HOUR, update_date, NOW()) <= 24) AS RecentBoardCount,
			]]>
			
		    (SELECT COUNT(*) FROM album WHERE userNickname = #{userNickname} and del_yn="n") AS TotalAlbumCount,
		    <![CDATA[
		    	(SELECT COUNT(*) FROM album WHERE userNickname = #{userNickname} and del_yn="n" AND TIMESTAMPDIFF(HOUR, update_date, NOW()) <= 24) AS RecentAlbumCount,
			]]>
		    (SELECT COUNT(*) FROM visit WHERE targetNickname = #{userNickname}) AS TotalVisitCount,
		    <![CDATA[
		    	(SELECT COUNT(*) FROM visit WHERE targetNickname = #{userNickname} AND TIMESTAMPDIFF(HOUR, update_date, NOW()) <= 24) AS RecentVisitCount
			]]>
	</select>
	
	<select id="selectCurrentContent" parameterType="String" resultType="map">
		SELECT seq, title, 'board' AS tableName, update_date
		FROM board
		WHERE userNickname = #{userNickname} AND del_yn = 'N' AND openScope = 1
		UNION ALL
		SELECT seq, title, 'album' AS tableName, update_date
		FROM album
		WHERE userNickname = #{userNickname} AND del_yn = 'N' AND openScope = 1
		ORDER BY update_date DESC
		LIMIT 4
	</select>

	
	<select id="getProfileHistory" parameterType="String" resultType="map">
		select 
			image
			,msg
			,create_date
	    from profile
	    where userNickname = #{userNickname}
	    order by create_date desc
	</select>
	
	<select id="getMinimi" parameterType="String" resultType="map">
		SELECT contentPath
		FROM userStorage
		WHERE userNickname = #{userNickname}
		AND category = "minimi"
	</select>
	
	<insert id="upsertBackground" parameterType="map">
		insert into miniroomBackground
			(userNickname
			,backgroundName
			,backgroundPath)
		values
			(#{userNickname}
			,#{backgroundName}
			,#{backgroundPath})
	</insert>
	
	<delete id="resetBackground" parameterType="String">
		delete from miniroomBackground
		where userNickname = #{userNickname}
	</delete>
	
	<delete id="resetMinimi" parameterType="String">
		delete from miniroomMinimi
		where userNickname = #{userNickname}
	</delete>
	
	<insert id="insertMinimi" parameterType="String">
		insert into miniroomMinimi
			(userNickname
			,minimiName
			,minimiPath
			,minimiLeft
			,minimiTop)
		values 
			(#{userNickname}
			,#{minimiName}
			,#{minimiPath}
			,#{minimiLeft}
			,#{minimiTop})
	</insert>
	
	<select id="selectMinimi" parameterType="String" resultType="map">
		select * from miniroomMinimi
		where userNickname = #{userNickname}	
	</select>
	
	<select id="selectBackground" parameterType="String" resultType="map">
		select * from miniroomBackground
		where userNickname = #{userNickname}	
	</select>
	
	<select id="selectHomeTitle" parameterType="String" resultType="map">
		select
			seq
			,title
		from
			miniHomeTitle
		where
		userNickname = #{userNickname}
	
	</select>
	
	<insert id="insertHomeTitle" parameterType="map">
		insert into miniHomeTitle
		(
			userNickname
		   ,title
		) values (
		
			#{userNickname}
		   ,#{title}
		)
	</insert>
	
	<update id="updateHomeTitle" parameterType="map">
		update miniHomeTitle
		set
			title = #{title}
		   ,update_date = CURRENT_TIMESTAMP
		where
			userNickname = #{userNickname}
	</update>
	
	<select id="mainSkin" parameterType="map" resultType="map">
		SELECT 
			category
			,contentPath
			,userNickname
		FROM
			userStorage
		WHERE 1=1
			AND userNickname = #{userNickname}
			AND allocation = '1'
			AND category = 'skin'
	</select>
	
	<select id="mainMenu" parameterType="map" resultType="map">
		SELECT 
			category
			,contentPath
			,userNickname
		FROM
			userStorage
		WHERE 1=1
			AND userNickname = #{userNickname}
			AND allocation = '1'
			AND category = 'menu'
	</select>
	
	<insert id="insertFriendCmt" parameterType="map">
		insert into friendCMT (
			userNickname
			,friendNickname
			,content
		) values (
			#{userNickname}
			,#{friendNickname}
			,#{content}
		)
	</insert>

<select id="selectFriendCmt" parameterType="map" resultType="map">
	select 
		userNickname
	    ,friendNickname
	    ,content
	    ,DATE_FORMAT(createDate, '%Y-%m-%d %H:%i') AS createDate
	from friendCMT
	where 1=1
	<if test="friendNickname == null">
		and friendNickname = #{userNickname}
	</if>
	<if test="friendNickname != null">
		and friendNickname = #{friendNickname}
	</if>
	and del_yn = 'n'
	order by createDate desc
	limit 5
</select>



	
	<update id="updateVisitCnt" parameterType="map">
		update visitCnt
		set
		todayCnt = #{todayCnt}
		,totalCnt = #{totalCnt}
		where 1=1
		<if test="userNickname != null">
			and userNickname = #{userNickname}
		</if>
	</update>
	


</mapper>



