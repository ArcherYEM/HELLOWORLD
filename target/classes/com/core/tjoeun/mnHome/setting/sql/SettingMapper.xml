<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.core.tjoeun.mnHome.setting.sql.SettingMapper">

	<select id="selectSettingUserStorage" parameterType="String" resultType="map">
		SELECT
			userNickname,
			category,
			productName,
			contentPath,
			buy_date,
			allocation
		FROM userStorage
		WHERE 1=1
		AND userNickname = #{value}
	</select>
	
	<select id="selectSkinMenu" parameterType="map" resultType="map">
		SELECT
			userNickname,
			category,
			productName,
			contentPath,
			buy_date,
			allocation
		FROM userStorage
		WHERE 1=1
		<if test="userNickname != null">
			AND userNickname = #{userNickname}
		</if>
		<if test="category != null">
	        <choose>
	            <when test="category == 'skin' or category == 'menu'">
	                AND (category = 'skin' OR category = 'menu')
	            </when>
	        </choose>
	    </if>
	</select>
	
	<update id="updateAllocationOff" parameterType="String">
		UPDATE userStorage
		SET
			allocation = 0
		WHERE
			userNickname = #{userNickname}
		AND
			allocation = 1
	</update>

	<update id="updateAllocationOn" parameterType="map">
		UPDATE userStorage
		SET
			allocation = 1
		WHERE
			userNickname = #{userNickname}
		AND
			productName = #{productName}
	</update>
	
	<select id="selectSearchUser" parameterType="map" resultType="map">
		select
			userEmail
			,userName
			,userNickname
			,userPhone
			,createDate
		from user
		where 1=1
		<if test="userNickname != null">
			and userNickname = #{userNickname}
		</if>
	</select>
	
	<!--0은 대기 1은 승인 -1은 거절   -->
	<insert id="insertFriendRequest" parameterType="map">
		insert into friends
		( userNickname
		, friendNickname
		, del_yn
		, fStatus
		) values (
			#{requestUser}
			,#{responseUser}
			,'N'
			,0
		)
	</insert>
	
	
	<select id="selectFriends" parameterType="map" resultType="map">
		select 
			seq
			, userNickname
			, friendNickname
			, fStatus
			, substring(createDate,1,10) as createDate
		from friends
		where (userNickname = #{userNickname} or friendNickname = #{userNickname})
		and del_yn = 'N'
		<if test="name != null">
			and (userNickname like concat('%',#{name},'%') 
				or friendNickname like concat('%',#{name},'%'))
		</if>
		<if test="checkFriend = 1">
			and fStatus != -1
		</if>
	</select>
	
	
	<update id="updateStatus" parameterType="map">
		update
			friends
		set 
			<if test="fStatus != null">
			fStatus = #{fStatus}
			</if>
			<if test="del != null">
			del_yn =  #{del}
			</if>
		where
			seq = #{seq}
	</update>
	
	<select id="selectDotoriUse" parameterType="String" resultType="map">
		SELECT *,
		       DATE_FORMAT(dotoriUseDate, '%Y.%m.%d %H:%i') as formattedDotoriUseDate
		FROM dotoriU 
		WHERE userNickname = #{userNickname}
		ORDER BY dotoriUseDate DESC
	</select>	
	
	<select id="selectDotoriCharge" parameterType="String" resultType="map">
		SELECT *,
		       DATE_FORMAT(dotoriChargeDate, '%Y.%m.%d %H:%i') as formattedDotoriChargeDate
		FROM dotoriC 
		WHERE userNickname = #{userNickname}
		ORDER BY dotoriChargeDate DESC;
	</select>
	
</mapper>